<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Markdown - 标签 - Wlcheng's Life</title><link>https://wlcheng.cc/tags/markdown/</link><description>Markdown - 标签 - Wlcheng's Life</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>wlcheng12@outlook.com (wlcheng)</managingEditor><webMaster>wlcheng12@outlook.com (wlcheng)</webMaster><lastBuildDate>Fri, 06 May 2022 18:42:12 +0800</lastBuildDate><atom:link href="https://wlcheng.cc/tags/markdown/" rel="self" type="application/rss+xml"/><item><title>Github 图床 PicGo 使用</title><link>https://wlcheng.cc/2022/05/github_picture_bed/</link><pubDate>Fri, 06 May 2022 18:42:12 +0800</pubDate><author><name>wlcheng</name></author><guid>https://wlcheng.cc/2022/05/github_picture_bed/</guid><description><![CDATA[<p>用 Github 仓库作为自用图床；用 PicGo 直接在 Typora 和 VS Code 中一键上传图床、粘贴图链。</p>
<h2 id="搭建github图床" class="headerLink">
    <a href="#%e6%90%ad%e5%bb%bagithub%e5%9b%be%e5%ba%8a" class="header-mark"></a>搭建Github图床</h2><p>Github仓库支持<code>1G</code>存储容量。</p>
<h3 id="创建github仓库" class="headerLink">
    <a href="#%e5%88%9b%e5%bb%bagithub%e4%bb%93%e5%ba%93" class="header-mark"></a>创建Github仓库</h3><p>在Github主页点击<code>New Repository</code>开始创建仓库。</p>
<div align="center" ></div>
<p>基本设置：<code>仓库名</code>，<code>描述</code>，仓库类型<code>public</code>，勾选<code>Add a README file</code>，其他保持默认即可。然后点击<code>Create repo</code>。</p>
<div align="center" ></div>
<p>然后网页会自动跳转到我们刚刚创建的仓库主页。我们要在这个仓库下面创建一个文件夹用于以后存放图片（当然不创建文件夹，直接将图片上传到仓库个目录也可以）。点击<code>Add file</code>下的<code>Create new file</code>。</p>
<div align="center" ></div>
<p>跳转到以下页面，我们按照图中方式依次输入<code>foldername</code>，<code>/</code>，<code>filename</code>，名字自己任取就行。因为这里不支持只创建文件夹，因此需要给出一个文件名。点击<code>Commit new file</code>提交更改。</p>
<div align="center" ></div>
<h3 id="创建repo-token" class="headerLink">
    <a href="#%e5%88%9b%e5%bb%barepo-token" class="header-mark"></a>创建repo token</h3><p>token 用于给后面我们用 PicGo 访问仓库并上传图片赋予权限。</p>
<p>首先在自己的头像下点击<code>Settings</code>。</p>
<div align="center" ></div>
<p>在左侧边栏往下找到并打开<code>Developer settings</code></p>
<div align="center" ></div>
<p>如下图，点击左侧边栏<code>Personal access token</code>，然后点击<code>Generate new token</code></p>
<div align="center" ></div>
<p>此步因为要赋予权限，因此会弹出窗口验证账号密码，填入后<code>Confirm password</code>即可。
然后就会到以下的 token 设置界面，按照图中所述进行创建即可。</p>
<div align="center" ></div>
<p>成功生成token后，马上复制下来，之后配置PicGo会用到。</p>
<div align="center" ></div>
<p>通过以上过程，我们的图床算是搭建完毕了，接下来就要利用 PicGo 实现从本地上传图片，并获取图片链接。</p>
<h2 id="配置picgo" class="headerLink">
    <a href="#%e9%85%8d%e7%bd%aepicgo" class="header-mark"></a>配置PicGo</h2><p>官方网站：<a href="https://molunerfinn.com/PicGo/" target="_blank" rel="noopener noreferrer">PicGo</a>。此处下载稳定版本的 <a href="https://mirror.ghproxy.com/https://github.com/Molunerfinn/PicGo/releases/download/v2.3.0/PicGo-Setup-2.3.0-x64.exe" target="_blank" rel="noopener noreferrer">PicGo</a>。下载后，按下图安装即可</p>
<div align="center" ></div>
<p>启动后，直接左键单击托盘图标，打开PicGo设置界面</p>
<div align="center" ></div>
<p>如下图，左侧展开<code>图床设置</code>，点击<code>Github图床</code>，右侧填入相关设置信息。</p>
<div align="center" ></div>
<p>以上填写各项的说明：</p>
<p>对于<code>仓库名</code>，<code>分支名</code>，<code>存储路径</code>这几项，我们已经通过前面的步骤创建了，打开如下的仓库主页面，就可以知道。</p>
<div align="center" ></div>
<p>而对于<code>token</code>，我们前面创建并已经复制了的，粘贴进来就可以。</p>
<p>对于自定义域名，</p>
<p>我们上传图片的Github官方链接是：
<code>https://raw.githubusercontent.com/用户名/仓库名@分支名</code>，可以直接通过此链接进行访问。但因为网速问题，我们往往通过 CDN 内容服务器进行访问，相当于是在全球各地建立内容缓存服务器，在访问内容时，能从就近的服务器上快速获取到内容。</p>
<p>使用 jsDilivr 作为 CDN 为 Github 提供加速。只需要按照以下格式填入上面的<code>自定义域名</code>框中就行：</p>
<p>❌<code>https://cdn.jsdelivr.net/gh/用户名/仓库名@分支名</code></p>
<p>但是，由于<code>cdn.jsdelivr.net</code>遭到 DNS 污染 (<a href="https://luotianyi.vc/6295.html" target="_blank" rel="noopener noreferrer">Luminous’ Home</a>)，暂将<code>自定义域名</code>更换为：</p>
<p>⭕<code>https://fastly.jsdelivr.net/gh/用户名/仓库名@分支名</code></p>
<p>或者其他备用：</p>
<blockquote>
<p>CloudFlare：<code>test1.jsdelivr.net</code></p>
<p>CloudFlare：<code>testingcf.jsdelivr.net</code></p>
<p>Fastly：<code>fastly.jsdelivr.net</code></p>
<p>GCORE：<code>gcore.jsdelivr.net</code></p>
</blockquote>
<p><font color=#FF0000>那么对于我的设置，我这里应该填入的是：</font>
<code>https://fastly.jsdelivr.net/gh/wlchenGG/myPictureBed@main</code></p>
<p>填好以上信息后，点击确定即可设置成功。</p>
<p>我们可以测试一下，在上传区，改为 Github图床，然后上传一张图片，稍作等待，提示上传成功后，将自动复制创建好的链接（这个链接默认为markdown的，后续我们会自定义一下）。</p>
<div align="center" ></div>
<p>以下是我测试生成的默认markdown格式链接，你可以将其放入markdown文件中测试一下，是一张可正常访问的图片，说明能够正常上传。</p>
<p><code>![](https://fastly.jsdelivr.net/gh/wlchenGG/myPictureBed@main/images/wallpaper19.jpg)</code></p>
<h2 id="配置typora" class="headerLink">
    <a href="#%e9%85%8d%e7%bd%aetypora" class="header-mark"></a>配置Typora</h2><p>打开Typora，按照下图设置。其中第7步选择自己安装PicGo的位置。</p>
<div align="center" ><br><div style="color:orange; border-bottom: 1px solid #d9d9d9; display: inline-block; color: #777; font-size: 90%; padding: 1px;">此处插入标题</div></div>
<p>测试一下，在Typora编辑界面，粘贴或者拖入图片时，将自动以Markdown格式插入图片，从链接可以看出图像已经上传。</p>
<div align="center" ></div>
<p>我们手头已经有很多文档，图片都是本地保存的怎么办呢。只需要完成以上设置后，通过以下选项，就可以将当前文档中的所有本地图片上传到图床中，并会自动将文档中的图片链接全部替换为图床链接。</p>
<div align="center" ></div>
<h2 id="自定义链接格式控制图片样式可选" class="headerLink">
    <a href="#%e8%87%aa%e5%ae%9a%e4%b9%89%e9%93%be%e6%8e%a5%e6%a0%bc%e5%bc%8f%e6%8e%a7%e5%88%b6%e5%9b%be%e7%89%87%e6%a0%b7%e5%bc%8f%e5%8f%af%e9%80%89" class="header-mark"></a>自定义链接格式控制图片样式（可选）</h2><p>打开PicGo，按照以下步骤设置</p>
<div align="center" ></div>
<p>其中，自定义链接的格式（这是一段HTML代码，我们用来美化图片的显示样式。
我们给出如下几种，自行选择所需，将其粘贴到上图4的框中即可。</p>
<style>
table th:first-of-type {
    width: 16%;
}
table th:nth-of-type(2) {
    width: 16%;
}
table th:nth-of-type(3) {
    width: 68%;
}
</style>
<table>
<thead>
<tr>
<th style="text-align:center">美化方式</th>
<th style="text-align:center">效果图</th>
<th>链接格式</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">控制大小</td>
<td style="text-align:center"><div align="center" ></div></td>
<td><code>&lt;div align=&quot;center&quot; &gt;&lt;img src=&quot;$url&quot; alt=&quot;$fileName&quot; width=&quot;75%&quot;/&gt;&lt;/div&gt;</code></td>
</tr>
<tr>
<td style="text-align:center">圆角处理</td>
<td style="text-align:center"><div align="center" ></div></td>
<td><code>&lt;div align=&quot;center&quot; &gt;&lt;img src=&quot;$url&quot; alt=&quot;$fileName&quot; width=&quot;75%&quot; style=&quot;border-radius:10px;&quot;/&gt;&lt;/div&gt;</code></td>
</tr>
<tr>
<td style="text-align:center">图片阴影</td>
<td style="text-align:center"><div align="center" ></div></td>
<td><code>&lt;div align=&quot;center&quot; &gt;&lt;img src=&quot;$url&quot; alt=&quot;$fileName&quot; width=&quot;75%&quot; style=&quot;box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);&quot;/&gt;&lt;/div&gt;</code></td>
</tr>
<tr>
<td style="text-align:center">阴影+圆角</td>
<td style="text-align:center"><div align="center" ></div></td>
<td><code>&lt;div align=&quot;center&quot; &gt;&lt;img src=&quot;$url&quot; alt=&quot;$fileName&quot; width=&quot;75%&quot; style=&quot;box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);border-radius:10px;&quot;/&gt;&lt;/div&gt;</code></td>
</tr>
<tr>
<td style="text-align:center">阴影+标题</td>
<td style="text-align:center"><div align="center" ><br><div style="color:orange; border-bottom: 1px solid #d9d9d9; display: inline-block; color: #777; font-size: 90%; padding: 1px;">此处插入标题</div></div></td>
<td><code>&lt;div align=&quot;center&quot; &gt;&lt;img src=&quot;$url&quot; alt=&quot;$fileName&quot; width=&quot;75%&quot; style=&quot;box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);&quot;/&gt;&lt;br&gt;&lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9; display: inline-block; color: #777; font-size: 90%; padding: 1px;&quot;&gt;此处插入标题&lt;/div&gt;&lt;/div&gt;</code></td>
</tr>
<tr>
<td style="text-align:center">圆角+标题</td>
<td style="text-align:center"><div align="center" ><br><div style="color:orange; border-bottom: 1px solid #d9d9d9; display: inline-block; color: #777; font-size: 90%; padding: 1px;">此处插入标题</div></div></td>
<td><code>&lt;div align=&quot;center&quot; &gt;&lt;img src=&quot;$url&quot; alt=&quot;$fileName&quot; width=&quot;75%&quot; style=&quot;border-radius:10px;&quot;/&gt;&lt;br&gt;&lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9; display: inline-block; color: #777; font-size: 90%; padding: 1px;&quot;&gt;此处插入标题&lt;/div&gt;&lt;/div&gt;</code></td>
</tr>
<tr>
<td style="text-align:center">阴影+圆角+标题</td>
<td style="text-align:center"><div align="center" ><br><div style="color:orange; border-bottom: 1px solid #d9d9d9; display: inline-block; color: #777; font-size: 90%; padding: 1px;">此处插入标题</div></div></td>
<td><code>&lt;div align=&quot;center&quot; &gt;&lt;img src=&quot;$url&quot; alt=&quot;$fileName&quot; width=&quot;75%&quot; style=&quot;box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);border-radius:10px;&quot;/&gt;&lt;br&gt;&lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9; display: inline-block; color: #777; font-size: 90%; padding: 1px;&quot;&gt;此处插入标题&lt;/div&gt;&lt;/div&gt;</code></td>
</tr>
</tbody>
</table>
<p>其中，</p>
<p><code>width=&quot;75%&quot;</code>：控制图片大小，百分比是占整个文档宽度的比例（方便适配不同网页大小），也可以直接写成<code>width=&quot;300&quot;</code>等整数用来控制图片的绝对大小。</p>
<p><code>border-radius:10px;</code>：用来控制圆角大小。</p>
<p><code>此处插入标题</code>：为图片设置标题。</p>
<p>配置完以上自定义链接格式后，如下图，在PicGo上传界面，选定<code>custom</code>，之后就可以退出PicGo了。</p>
<div align="center" ></div>
<p>在Typora中，同样是拖入或者粘贴图片时，就会获取以上设置的链接到剪切板中，只需要粘贴到Typora中即可。</p>
<p>这里有一个问题是，Typora 粘贴图片时，始终会默认粘贴Markdown格式的图片链接，如前一小节所示。因此，我们要将Typora自动生成的删除，然后将剪切板中的自定义格式链接粘贴进去即可。如下图所示：</p>
<div align="center" ></div>
<h2 id="配置vs-code" class="headerLink">
    <a href="#%e9%85%8d%e7%bd%aevs-code" class="header-mark"></a>配置VS Code</h2><p>TODO: 后补</p>
<p><strong>参考：</strong></p>
<p>[1] <a href="https://yushuaigee.gitee.io/2021/01/14/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%28%E4%BA%94%29%E2%80%94%E2%80%94Typora%20&#43;%20PicGo%20&#43;%20GitHub%20Gitee%E5%9B%BE%E5%BA%8A/" target="_blank" rel="noopener noreferrer">从零开始免费搭建自己的博客 (五)——Typora + PicGo + GitHub/Gitee 图床</a></p>]]></description></item></channel></rss>