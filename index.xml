<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Wlcheng's Life</title><link>https://wlcheng.cc/</link><description>来日方长，何惧车遥马慢</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>wlcheng12@outlook.com (wlcheng)</managingEditor><webMaster>wlcheng12@outlook.com (wlcheng)</webMaster><lastBuildDate>Wed, 08 Mar 2023 11:26:27 +0100</lastBuildDate><atom:link href="https://wlcheng.cc/index.xml" rel="self" type="application/rss+xml"/><item><title>Git 常用命令和用法</title><link>https://wlcheng.cc/posts/git_command_list/</link><pubDate>Wed, 08 Mar 2023 11:26:27 +0100</pubDate><author><name>wlcheng</name></author><guid>https://wlcheng.cc/posts/git_command_list/</guid><description><![CDATA[<p>速查 Git 常用的命令和用法。分为基本（commit、branch、checkout、merge、rabase 等）和远程（clone、push、pull 等）两部分。</p>
<p>本文基于 <a href="https://chat.openai.com/chat" target="_blank" rel="noopener noreferrer">chatGPT</a> 自动生成初稿（省时省力😁），并参考 <a href="https://learngitbranching.js.org/?locale=zh_CN" target="_blank" rel="noopener noreferrer">learngitbranching</a> 进行调整。</p>
<h2 id="基本命令" class="headerLink">
    <a href="#%e5%9f%ba%e6%9c%ac%e5%91%bd%e4%bb%a4" class="header-mark"></a>基本命令</h2><p><code>git init</code>：创建一个新的 Git 仓库。</p>
<p><code>git add [file]</code>：将文件添加到 Git 的暂存区。</p>
<p><code>git commit -m [message]</code>：将暂存区的文件提交到 Git 仓库，并添加一条注释。</p>
<p><code>git status</code>：查看当前 Git 仓库的状态，包括已修改、已暂存和未跟踪的文件。</p>
<p><code>git diff</code>：查看未暂存文件和最后一次提交之间的差异。</p>
<p><code>git diff --staged</code>：查看已暂存文件和最后一次提交之间的差异。</p>
<p><code>git log</code>：查看 Git 仓库的提交历史。</p>
<p><code>git reflog</code>：查看命令历史，即分支的所有操作记录。</p>
<p><code>git tag [name]</code>：给当前的提交打上标签。</p>
<p><code>git reset</code>：取消暂存或取消上一次提交。</p>
<p><code>git rm [file]</code>：从 Git 仓库中删除文件。</p>
<h2 id="分支相关" class="headerLink">
    <a href="#%e5%88%86%e6%94%af%e7%9b%b8%e5%85%b3" class="header-mark"></a>分支相关</h2><p><code>git branch [name]</code>：创建一个新的分支。</p>
<p><code>git branch -d[D] [name]</code>：删除[强制删除]一个分支。</p>
<p><code>git checkout [branch-name]</code>：切换到另一个分支。</p>
<p><code>git checkout -b [branch-name]</code>：创建同时切换到另一个分支。</p>
<p><code>git merge [branch]</code>：将指定的分支合并到当前分支。</p>
<p><code>git rebase [branch]</code>：将当前分支的提交步骤顺接到指定分支。</p>
<h2 id="远程相关" class="headerLink">
    <a href="#%e8%bf%9c%e7%a8%8b%e7%9b%b8%e5%85%b3" class="header-mark"></a>远程相关</h2><p><code>git clone [url]</code>：从远程仓库克隆一个副本到本地。</p>
<p><code>git pull</code>：从远程仓库拉取最新的代码到本地。</p>
<p><code>git push [origin] [master]</code>：将本地 master 分支推送到远程仓库。</p>
<p><code>git remote -[v]</code> 查看远程仓库[详细]信息。</p>
<p><code>git remote add [name] [url]</code>：将远程仓库添加到 Git 仓库。</p>
<p><code>git fetch</code>：从远程仓库获取最新的代码，但不进行合并。先<code>fetch</code>，再<code>merge</code>就相当于<code>pull</code>。</p>
<h2 id="其他" class="headerLink">
    <a href="#%e5%85%b6%e4%bb%96" class="header-mark"></a>其他</h2><p><code>HEAD</code>：指向当前正在处理的提交记录。</p>
<p><code>C^[number]</code>：表示指向提交记录 <code>C</code> 的第 <code>number</code> 个直接父记录（宽度搜索）。一个记录可能会有多个父记录（执行 <code>merge</code> 时产生）。<code>C^</code> 和 <code>C^1</code> 等价；<code>number</code>大于 1 时表示指向其他父记录。</p>
<p><code>C~[number]</code>：表示指向提交记录 <code>C</code> 的回溯第 <code>number</code> 代的祖先记录（深度搜索）。</p>
<h2 id="参考" class="headerLink">
    <a href="#%e5%8f%82%e8%80%83" class="header-mark"></a>参考</h2><p>[1] Peter Cottle. learngitbranching. <a href="https://learngitbranching.js.org/?locale=zh_CN" target="_blank" rel="noopener noreferrer">https://learngitbranching.js.org/?locale=zh_CN</a></p>
<p>[2] GitHub Docs. Git Cheat Sheets. <a href="https://training.github.com/downloads/zh_CN/github-git-cheat-sheet/" target="_blank" rel="noopener noreferrer">https://training.github.com/downloads/zh_CN/github-git-cheat-sheet/</a></p>
<p>[3] Visual Git Cheat Sheet. <a href="https://ndpsoftware.com/git-cheatsheet.html" target="_blank" rel="noopener noreferrer">https://ndpsoftware.com/git-cheatsheet.html</a></p>
<p>[4] Blue Stragglers. 一个有趣的 Git 练习网站. <a href="https://zhuanlan.zhihu.com/p/383960650" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/383960650</a></p>]]></description></item><item><title>Linux 服务器下 PyTorch 环境配置</title><link>https://wlcheng.cc/posts/config_linux_server_pytorch/</link><pubDate>Wed, 01 Mar 2023 16:05:36 +0100</pubDate><author><name>wlcheng</name></author><guid>https://wlcheng.cc/posts/config_linux_server_pytorch/</guid><description><![CDATA[<p>记录在 Linux 下，Miniconda3 中配置 PyTorch 环境。</p>
<h2 id="安装-miniconda" class="headerLink">
    <a href="#%e5%ae%89%e8%a3%85-miniconda" class="header-mark"></a>安装 Miniconda</h2><p><a href="https://docs.conda.io/en/latest/miniconda.html" target="_blank" rel="noopener noreferrer">Miniconda 官网</a></p>
<h3 id="下载安装包" class="headerLink">
    <a href="#%e4%b8%8b%e8%bd%bd%e5%ae%89%e8%a3%85%e5%8c%85" class="header-mark"></a>下载安装包</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget https://repo.anaconda.com/miniconda/Miniconda3-py310_23.1.0-1-Linux-x86_64.sh
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="执行安装" class="headerLink">
    <a href="#%e6%89%a7%e8%a1%8c%e5%ae%89%e8%a3%85" class="header-mark"></a>执行安装</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash Miniconda3-py310_23.1.0-1-Linux-x86_64.sh
</span></span></code></pre></td></tr></table>
</div>
</div><p>输入 <code>yes</code> 同意协议；然后 <code>回车</code> 采用默认安装路径，或者手动输入指定的安装路径：</p>
<div align="center" ></div>
<p>下面询问在打开命令行时是否自动进入 conda 的 <code>base</code> 环境：输入 <code>yes</code> 后回车，然后执行 <code>conda config --set auto_activate_base false</code> 关闭自动初始化。p.s. 这样做可以免去手动添加环境变量的过程。</p>
<div align="center" ></div>
<h3 id="添加软件源频道" class="headerLink">
    <a href="#%e6%b7%bb%e5%8a%a0%e8%bd%af%e4%bb%b6%e6%ba%90%e9%a2%91%e9%81%93" class="header-mark"></a>添加软件源（频道）</h3><p>为了提高软件包下载速度，我们可以通过以下命令添加镜像软件源：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 新加源具有高优先级</span>
</span></span><span class="line"><span class="cl">conda config --add channels source_url
</span></span><span class="line"><span class="cl">conda config --prepend channels source_url <span class="c1">#同上等效</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 新加源具有低优先级</span>
</span></span><span class="line"><span class="cl">conda config --append channels source_url
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行以下命令，添加清华源：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
</span></span><span class="line"><span class="cl">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/
</span></span><span class="line"><span class="cl">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/
</span></span><span class="line"><span class="cl">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/
</span></span></code></pre></td></tr></table>
</div>
</div><p>查看源是否添加成功：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">conda config --get channels
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>参考：</strong></p>
<p>[1] 朱渠成, Linux 下 miniconda 的安装使用, <a href="https://www.jianshu.com/p/4d4c786ed454" target="_blank" rel="noopener noreferrer">https://www.jianshu.com/p/4d4c786ed454</a></p>
<p>[2] Conda doc, Managing channels, <a href="https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-channels.html?highlight=priority" target="_blank" rel="noopener noreferrer">https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-channels.html?highlight=priority</a></p>
<p>[3] 普遍语法, 编辑 condarc 编辑 channel 的优先级, <a href="https://blog.csdn.net/weixin_45564533/article/details/123012930" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/weixin_45564533/article/details/123012930</a></p>
<h2 id="创建-pytorch-虚拟环境" class="headerLink">
    <a href="#%e5%88%9b%e5%bb%ba-pytorch-%e8%99%9a%e6%8b%9f%e7%8e%af%e5%a2%83" class="header-mark"></a>创建 PyTorch 虚拟环境</h2><h3 id="创建-conda-独立环境" class="headerLink">
    <a href="#%e5%88%9b%e5%bb%ba-conda-%e7%8b%ac%e7%ab%8b%e7%8e%af%e5%a2%83" class="header-mark"></a>创建 conda 独立环境</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">conda create -n pt <span class="nv">python</span><span class="o">=</span>3.10
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="配置-pytorch-环境" class="headerLink">
    <a href="#%e9%85%8d%e7%bd%ae-pytorch-%e7%8e%af%e5%a2%83" class="header-mark"></a>配置 PyTorch 环境</h3><p>进入创建的环境 <code>pt</code>：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">conda activate pt
</span></span></code></pre></td></tr></table>
</div>
</div><p>通过 PyTorch <a href="https://pytorch.org/get-started/locally/" target="_blank" rel="noopener noreferrer">官网</a>，选择所需环境，获取安装命令并执行：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">pip3 install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cpu
</span></span></code></pre></td></tr></table>
</div>
</div><p>进入 Python 上下文环境，执行以下命令，如果能输出正确的版本号，则 PyTorch 安装成功：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">torch</span>
</span></span><span class="line"><span class="cl"><span class="n">torch</span><span class="o">.</span><span class="n">__version__</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div align="center" ></div>
<p><strong>参考：</strong></p>
<p>[4] PyTorch 安装命令. <a href="https://pytorch.org/get-started/locally/" target="_blank" rel="noopener noreferrer">https://pytorch.org/get-started/locally/</a></p>
<p>[5] Hitesh Jethva, LCTT. Linux 系统下查看硬件信息命令大全. <a href="https://linux.cn/article-6928-1.html" target="_blank" rel="noopener noreferrer">https://linux.cn/article-6928-1.html</a>, 命令 <code>inxi -Fx</code> 好使</p>
<h2 id="常用-conda-环境管理命令" class="headerLink">
    <a href="#%e5%b8%b8%e7%94%a8-conda-%e7%8e%af%e5%a2%83%e7%ae%a1%e7%90%86%e5%91%bd%e4%bb%a4" class="header-mark"></a>常用 Conda 环境管理命令</h2><h3 id="环境管理命令" class="headerLink">
    <a href="#%e7%8e%af%e5%a2%83%e7%ae%a1%e7%90%86%e5%91%bd%e4%bb%a4" class="header-mark"></a>环境管理命令</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 创建虚拟环境</span>
</span></span><span class="line"><span class="cl">conda create --name 环境名 <span class="nv">python</span><span class="o">=</span>3.7 <span class="o">[</span>可以指定其他需要安装的包<span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 删除某个环境</span>
</span></span><span class="line"><span class="cl">conda remove --name 环境名 --all
</span></span><span class="line"><span class="cl"><span class="c1"># 列出所有环境</span>
</span></span><span class="line"><span class="cl">conda env list
</span></span><span class="line"><span class="cl">或者
</span></span><span class="line"><span class="cl">conda info --envs
</span></span><span class="line"><span class="cl"><span class="c1"># 进入某个环境</span>
</span></span><span class="line"><span class="cl">conda activate 环境名
</span></span><span class="line"><span class="cl"><span class="c1"># 退出当前环境</span>
</span></span><span class="line"><span class="cl">conda deactivate
</span></span><span class="line"><span class="cl"><span class="c1"># 列出当前环境下安装的包</span>
</span></span><span class="line"><span class="cl">conda list
</span></span><span class="line"><span class="cl"><span class="c1"># 导出环境配置</span>
</span></span><span class="line"><span class="cl">conda env <span class="nb">export</span> &gt; environment.txt
</span></span><span class="line"><span class="cl"><span class="c1"># 从配置文件创建新环境</span>
</span></span><span class="line"><span class="cl">conda ceate --name 环境名 --file environment.txt
</span></span><span class="line"><span class="cl"><span class="c1"># 重命名环境（克隆旧环境，删除旧环境）</span>
</span></span><span class="line"><span class="cl">conda create --name 新环境名 --clone 旧环境名
</span></span><span class="line"><span class="cl">conda env remove --name 旧环境名
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="源频道管理命令" class="headerLink">
    <a href="#%e6%ba%90%e9%a2%91%e9%81%93%e7%ae%a1%e7%90%86%e5%91%bd%e4%bb%a4" class="header-mark"></a>源（频道）管理命令</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">## 添加新的源</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 新加源具有高优先级</span>
</span></span><span class="line"><span class="cl">conda config --add channels source_url
</span></span><span class="line"><span class="cl">conda config --prepend channels source_url <span class="c1">#同上等效</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 新加源具有低优先级</span>
</span></span><span class="line"><span class="cl">conda config --append channels source_url
</span></span><span class="line"><span class="cl"><span class="c1">## 查看已有的源</span>
</span></span><span class="line"><span class="cl">conda config --get channels
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>参考：</strong></p>
<p>[6] 朱渠成. miniconda的常用命令汇总. <a href="https://www.jianshu.com/p/0e9c88479cfd" target="_blank" rel="noopener noreferrer">https://www.jianshu.com/p/0e9c88479cfd</a></p>
<p>[7] Fission0102. miniconda 常用命令. <a href="https://www.cnblogs.com/Fission0102/p/13998824.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/Fission0102/p/13998824.html</a></p>]]></description></item><item><title>Github 图床 PicGo 使用</title><link>https://wlcheng.cc/posts/github_picture_bed/</link><pubDate>Fri, 06 May 2022 18:42:12 +0800</pubDate><author><name>wlcheng</name></author><guid>https://wlcheng.cc/posts/github_picture_bed/</guid><description><![CDATA[<p>用 Github 仓库作为自用图床；用 PicGo 直接在 Typora 和 VS Code 中一键上传图床、粘贴图链。</p>
<h2 id="搭建github图床" class="headerLink">
    <a href="#%e6%90%ad%e5%bb%bagithub%e5%9b%be%e5%ba%8a" class="header-mark"></a>搭建Github图床</h2><p>Github仓库支持<code>1G</code>存储容量。</p>
<h3 id="创建github仓库" class="headerLink">
    <a href="#%e5%88%9b%e5%bb%bagithub%e4%bb%93%e5%ba%93" class="header-mark"></a>创建Github仓库</h3><p>在Github主页点击<code>New Repository</code>开始创建仓库。</p>
<div align="center" ></div>
<p>基本设置：<code>仓库名</code>，<code>描述</code>，仓库类型<code>public</code>，勾选<code>Add a README file</code>，其他保持默认即可。然后点击<code>Create repo</code>。</p>
<div align="center" ></div>
<p>然后网页会自动跳转到我们刚刚创建的仓库主页。我们要在这个仓库下面创建一个文件夹用于以后存放图片（当然不创建文件夹，直接将图片上传到仓库个目录也可以）。点击<code>Add file</code>下的<code>Create new file</code>。</p>
<div align="center" ></div>
<p>跳转到以下页面，我们按照图中方式依次输入<code>foldername</code>，<code>/</code>，<code>filename</code>，名字自己任取就行。因为这里不支持只创建文件夹，因此需要给出一个文件名。点击<code>Commit new file</code>提交更改。</p>
<div align="center" ></div>
<h3 id="创建repo-token" class="headerLink">
    <a href="#%e5%88%9b%e5%bb%barepo-token" class="header-mark"></a>创建repo token</h3><p>token 用于给后面我们用 PicGo 访问仓库并上传图片赋予权限。</p>
<p>首先在自己的头像下点击<code>Settings</code>。</p>
<div align="center" ></div>
<p>在左侧边栏往下找到并打开<code>Developer settings</code></p>
<div align="center" ></div>
<p>如下图，点击左侧边栏<code>Personal access token</code>，然后点击<code>Generate new token</code></p>
<div align="center" ></div>
<p>此步因为要赋予权限，因此会弹出窗口验证账号密码，填入后<code>Confirm password</code>即可。
然后就会到以下的 token 设置界面，按照图中所述进行创建即可。</p>
<div align="center" ></div>
<p>成功生成token后，马上复制下来，之后配置PicGo会用到。</p>
<div align="center" ></div>
<p>通过以上过程，我们的图床算是搭建完毕了，接下来就要利用 PicGo 实现从本地上传图片，并获取图片链接。</p>
<h2 id="配置picgo" class="headerLink">
    <a href="#%e9%85%8d%e7%bd%aepicgo" class="header-mark"></a>配置PicGo</h2><p>官方网站：<a href="https://molunerfinn.com/PicGo/" target="_blank" rel="noopener noreferrer">PicGo</a>。此处下载稳定版本的 <a href="https://mirror.ghproxy.com/https://github.com/Molunerfinn/PicGo/releases/download/v2.3.0/PicGo-Setup-2.3.0-x64.exe" target="_blank" rel="noopener noreferrer">PicGo</a>。下载后，按下图安装即可</p>
<div align="center" ></div>
<p>启动后，直接左键单击托盘图标，打开PicGo设置界面</p>
<div align="center" ></div>
<p>如下图，左侧展开<code>图床设置</code>，点击<code>Github图床</code>，右侧填入相关设置信息。</p>
<div align="center" ></div>
<p>以上填写各项的说明：</p>
<p>对于<code>仓库名</code>，<code>分支名</code>，<code>存储路径</code>这几项，我们已经通过前面的步骤创建了，打开如下的仓库主页面，就可以知道。</p>
<div align="center" ></div>
<p>而对于<code>token</code>，我们前面创建并已经复制了的，粘贴进来就可以。</p>
<p>对于自定义域名，</p>
<p>我们上传图片的Github官方链接是：
<code>https://raw.githubusercontent.com/用户名/仓库名@分支名</code>，可以直接通过此链接进行访问。但因为网速问题，我们往往通过 CDN 内容服务器进行访问，相当于是在全球各地建立内容缓存服务器，在访问内容时，能从就近的服务器上快速获取到内容。</p>
<p>使用 jsDilivr 作为 CDN 为 Github 提供加速。只需要按照以下格式填入上面的<code>自定义域名</code>框中就行：</p>
<p>❌<code>https://cdn.jsdelivr.net/gh/用户名/仓库名@分支名</code></p>
<p>但是，由于<code>cdn.jsdelivr.net</code>遭到 DNS 污染 (<a href="https://luotianyi.vc/6295.html" target="_blank" rel="noopener noreferrer">Luminous’ Home</a>)，暂将<code>自定义域名</code>更换为：</p>
<p>⭕<code>https://fastly.jsdelivr.net/gh/用户名/仓库名@分支名</code></p>
<p>或者其他备用：</p>
<blockquote>
<p>CloudFlare：<code>test1.jsdelivr.net</code></p>
<p>CloudFlare：<code>testingcf.jsdelivr.net</code></p>
<p>Fastly：<code>fastly.jsdelivr.net</code></p>
<p>GCORE：<code>gcore.jsdelivr.net</code></p>
</blockquote>
<p><font color=#FF0000>那么对于我的设置，我这里应该填入的是：</font>
<code>https://fastly.jsdelivr.net/gh/wlchenGG/myPictureBed@main</code></p>
<p>填好以上信息后，点击确定即可设置成功。</p>
<p>我们可以测试一下，在上传区，改为 Github图床，然后上传一张图片，稍作等待，提示上传成功后，将自动复制创建好的链接（这个链接默认为markdown的，后续我们会自定义一下）。</p>
<div align="center" ></div>
<p>以下是我测试生成的默认markdown格式链接，你可以将其放入markdown文件中测试一下，是一张可正常访问的图片，说明能够正常上传。</p>
<p><code>![](https://fastly.jsdelivr.net/gh/wlchenGG/myPictureBed@main/images/wallpaper19.jpg)</code></p>
<h2 id="配置typora" class="headerLink">
    <a href="#%e9%85%8d%e7%bd%aetypora" class="header-mark"></a>配置Typora</h2><p>打开Typora，按照下图设置。其中第7步选择自己安装PicGo的位置。</p>
<div align="center" ><br><div style="color:orange; border-bottom: 1px solid #d9d9d9; display: inline-block; color: #777; font-size: 90%; padding: 1px;">此处插入标题</div></div>
<p>测试一下，在Typora编辑界面，粘贴或者拖入图片时，将自动以Markdown格式插入图片，从链接可以看出图像已经上传。</p>
<div align="center" ></div>
<p>我们手头已经有很多文档，图片都是本地保存的怎么办呢。只需要完成以上设置后，通过以下选项，就可以将当前文档中的所有本地图片上传到图床中，并会自动将文档中的图片链接全部替换为图床链接。</p>
<div align="center" ></div>
<h2 id="自定义链接格式控制图片样式可选" class="headerLink">
    <a href="#%e8%87%aa%e5%ae%9a%e4%b9%89%e9%93%be%e6%8e%a5%e6%a0%bc%e5%bc%8f%e6%8e%a7%e5%88%b6%e5%9b%be%e7%89%87%e6%a0%b7%e5%bc%8f%e5%8f%af%e9%80%89" class="header-mark"></a>自定义链接格式控制图片样式（可选）</h2><p>打开PicGo，按照以下步骤设置</p>
<div align="center" ></div>
<p>其中，自定义链接的格式（这是一段HTML代码，我们用来美化图片的显示样式。
我们给出如下几种，自行选择所需，将其粘贴到上图4的框中即可。</p>
<style>
table th:first-of-type {
    width: 16%;
}
table th:nth-of-type(2) {
    width: 16%;
}
table th:nth-of-type(3) {
    width: 68%;
}
</style>
<table>
<thead>
<tr>
<th style="text-align:center">美化方式</th>
<th style="text-align:center">效果图</th>
<th>链接格式</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">控制大小</td>
<td style="text-align:center"><div align="center" ></div></td>
<td><code>&lt;div align=&quot;center&quot; &gt;&lt;img src=&quot;$url&quot; alt=&quot;$fileName&quot; width=&quot;75%&quot;/&gt;&lt;/div&gt;</code></td>
</tr>
<tr>
<td style="text-align:center">圆角处理</td>
<td style="text-align:center"><div align="center" ></div></td>
<td><code>&lt;div align=&quot;center&quot; &gt;&lt;img src=&quot;$url&quot; alt=&quot;$fileName&quot; width=&quot;75%&quot; style=&quot;border-radius:10px;&quot;/&gt;&lt;/div&gt;</code></td>
</tr>
<tr>
<td style="text-align:center">图片阴影</td>
<td style="text-align:center"><div align="center" ></div></td>
<td><code>&lt;div align=&quot;center&quot; &gt;&lt;img src=&quot;$url&quot; alt=&quot;$fileName&quot; width=&quot;75%&quot; style=&quot;box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);&quot;/&gt;&lt;/div&gt;</code></td>
</tr>
<tr>
<td style="text-align:center">阴影+圆角</td>
<td style="text-align:center"><div align="center" ></div></td>
<td><code>&lt;div align=&quot;center&quot; &gt;&lt;img src=&quot;$url&quot; alt=&quot;$fileName&quot; width=&quot;75%&quot; style=&quot;box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);border-radius:10px;&quot;/&gt;&lt;/div&gt;</code></td>
</tr>
<tr>
<td style="text-align:center">阴影+标题</td>
<td style="text-align:center"><div align="center" ><br><div style="color:orange; border-bottom: 1px solid #d9d9d9; display: inline-block; color: #777; font-size: 90%; padding: 1px;">此处插入标题</div></div></td>
<td><code>&lt;div align=&quot;center&quot; &gt;&lt;img src=&quot;$url&quot; alt=&quot;$fileName&quot; width=&quot;75%&quot; style=&quot;box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);&quot;/&gt;&lt;br&gt;&lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9; display: inline-block; color: #777; font-size: 90%; padding: 1px;&quot;&gt;此处插入标题&lt;/div&gt;&lt;/div&gt;</code></td>
</tr>
<tr>
<td style="text-align:center">圆角+标题</td>
<td style="text-align:center"><div align="center" ><br><div style="color:orange; border-bottom: 1px solid #d9d9d9; display: inline-block; color: #777; font-size: 90%; padding: 1px;">此处插入标题</div></div></td>
<td><code>&lt;div align=&quot;center&quot; &gt;&lt;img src=&quot;$url&quot; alt=&quot;$fileName&quot; width=&quot;75%&quot; style=&quot;border-radius:10px;&quot;/&gt;&lt;br&gt;&lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9; display: inline-block; color: #777; font-size: 90%; padding: 1px;&quot;&gt;此处插入标题&lt;/div&gt;&lt;/div&gt;</code></td>
</tr>
<tr>
<td style="text-align:center">阴影+圆角+标题</td>
<td style="text-align:center"><div align="center" ><br><div style="color:orange; border-bottom: 1px solid #d9d9d9; display: inline-block; color: #777; font-size: 90%; padding: 1px;">此处插入标题</div></div></td>
<td><code>&lt;div align=&quot;center&quot; &gt;&lt;img src=&quot;$url&quot; alt=&quot;$fileName&quot; width=&quot;75%&quot; style=&quot;box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);border-radius:10px;&quot;/&gt;&lt;br&gt;&lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9; display: inline-block; color: #777; font-size: 90%; padding: 1px;&quot;&gt;此处插入标题&lt;/div&gt;&lt;/div&gt;</code></td>
</tr>
</tbody>
</table>
<p>其中，</p>
<p><code>width=&quot;75%&quot;</code>：控制图片大小，百分比是占整个文档宽度的比例（方便适配不同网页大小），也可以直接写成<code>width=&quot;300&quot;</code>等整数用来控制图片的绝对大小。</p>
<p><code>border-radius:10px;</code>：用来控制圆角大小。</p>
<p><code>此处插入标题</code>：为图片设置标题。</p>
<p>配置完以上自定义链接格式后，如下图，在PicGo上传界面，选定<code>custom</code>，之后就可以退出PicGo了。</p>
<div align="center" ></div>
<p>在Typora中，同样是拖入或者粘贴图片时，就会获取以上设置的链接到剪切板中，只需要粘贴到Typora中即可。</p>
<p>这里有一个问题是，Typora 粘贴图片时，始终会默认粘贴Markdown格式的图片链接，如前一小节所示。因此，我们要将Typora自动生成的删除，然后将剪切板中的自定义格式链接粘贴进去即可。如下图所示：</p>
<div align="center" ></div>
<h2 id="配置vs-code" class="headerLink">
    <a href="#%e9%85%8d%e7%bd%aevs-code" class="header-mark"></a>配置VS Code</h2><p>TODO: 后补</p>
<p><strong>参考：</strong></p>
<p>[1] <a href="https://yushuaigee.gitee.io/2021/01/14/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%28%E4%BA%94%29%E2%80%94%E2%80%94Typora%20&#43;%20PicGo%20&#43;%20GitHub%20Gitee%E5%9B%BE%E5%BA%8A/" target="_blank" rel="noopener noreferrer">从零开始免费搭建自己的博客 (五)——Typora + PicGo + GitHub/Gitee 图床</a></p>]]></description></item><item><title>Matlab 2021a 安装与激活</title><link>https://wlcheng.cc/posts/install_matlab/</link><pubDate>Sun, 03 Apr 2022 18:39:48 +0800</pubDate><author><name>wlcheng</name></author><guid>https://wlcheng.cc/posts/install_matlab/</guid><description><![CDATA[<p>本文记录安装 Matlab 2021a 的安装过程，以及光天化日下的激活方法。</p>
<div class="details admonition information open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>安装包下载<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>
<p>Matlab R2021a 安装包：</p>
<p><a href="https://ww2.mathworks.cn/products/new_products/release2021a.html" target="_blank" rel="noopener noreferrer">MathWorks 官方下载</a> 或转自 <a href="https://blog.csdn.net/GGY1102/article/details/121733746" target="_blank" rel="noopener noreferrer">Robot-G</a> 的 <a href="https://www.aliyundrive.com/s/BYPHMoAiLqq" target="_blank" rel="noopener noreferrer">阿里云盘</a></p>
</li>
<li>
<p>Matlab910Win 破解工具包：</p>
<p><a href="https://wlcheng.lanzouo.com/iAPxr0qkwoha" target="_blank" rel="noopener noreferrer">https://wlcheng.lanzouo.com/iAPxr0qkwoha</a> 密码:fcaz</p>
</li>
</ul>
</div>
        </div>
    </div>
<h2 id="r2021a安装流程" class="headerLink">
    <a href="#r2021a%e5%ae%89%e8%a3%85%e6%b5%81%e7%a8%8b" class="header-mark"></a>R2021a安装流程</h2><p>右键装载<code>Matlab910R2021a_Win64.iso</code>镜像文件：</p>
<div align="center" ></div>
<p>打开安装程序<code>setup.exe</code></p>
<div align="center" ></div>
<div align="center" ></div>
<p>在<code>高级选项</code>中选择<code>我有文件安装密钥</code></p>
<div align="center" ></div>
<p>点选<code>是</code>接收许可协议条款，点击<code>下一步</code></p>
<div align="center" ></div>
<p>输入安装密钥<code>09806-07443-53955-64350-21751-41297</code>，点击<code>下一步</code>。</p>
<div class="details admonition information open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>密钥<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>如果是<code>standalone</code>方式，个人使用，填写密钥：09806-07443-53955-64350-21751-41297</p>
<p>如果是<code>Server</code>方式，作为服务器或集群节点，填写密钥：40236-45817-26714-51426-39281</p>
</div>
        </div>
    </div>
<div align="center" ></div>
<p>选择许可证文件：</p>
<div align="center" ></div>
<p>选择要安装的工具包。</p>
<div align="center" ></div>
<div align="center" ></div>
<p>安装完毕，<code>关闭</code>即可。</p>
<div align="center" ></div>
<h2 id="r2021a激活流程" class="headerLink">
    <a href="#r2021a%e6%bf%80%e6%b4%bb%e6%b5%81%e7%a8%8b" class="header-mark"></a>R2021a激活流程</h2><ul>
<li>拷贝文件夹<code>Matlab910Win</code>中的<code>libmwlmgrimpl.dll</code>文件到R2021a安装位置下的路径<code>&lt;matlab安装位置&gt;\bin\win64\matlab_startup_plugins\lmgrimpl</code>中：</li>
</ul>
<div align="center" ></div>
<ul>
<li>拷贝文件夹<code>Matlab910Win</code>中的<code>license.lic</code>文件到R2021a安装位置下的路径 <code>&lt;matlab安装位置&gt;\licenses</code>中：</li>
</ul>
<div align="center" ></div>
<p><strong>问题：</strong> 安装完后，发现开始菜单的图标不能正确显示。</p>
<div align="center" ></div>
<p><strong>解决：</strong> 按照以下操作自行创建开始菜单图标即可。</p>
<div align="center" ></div>
<ul>
<li><strong>参考：</strong></li>
</ul>
<p><strong>Robot-G</strong>, MATLAB (R2021a) 软件下载和安装教程, <a href="https://blog.csdn.net/GGY1102/article/details/121733746" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/GGY1102/article/details/121733746</a></p>
<h2 id="r2018安装流程" class="headerLink">
    <a href="#r2018%e5%ae%89%e8%a3%85%e6%b5%81%e7%a8%8b" class="header-mark"></a>R2018安装流程</h2><p>勾选<code>使用文件安装密钥</code>，进入下一步：</p>
<div align="center" ></div>
<p>勾选<code>是</code>，进入下一步：</p>
<div align="center" ></div>
<p>输入密钥：09806-07443-53955-64350-21751-41297，进入下一步：</p>
<div align="center" ></div>
<p>选择安装目录，进入下一步：</p>
<div align="center" ></div>
<p>按需选择要安装的工具箱：</p>
<div align="center" ></div>
<div align="center" ></div>
<div align="center" ></div>
<p>确认要安装的清单后，点击安装：</p>
<div align="center" ></div>
<p>程序安装进程：</p>
<div align="center" ></div>
<p>打开看看效果</p>
<div align="center" ></div>
<h2 id="r2018-激活流程todo" class="headerLink">
    <a href="#r2018-%e6%bf%80%e6%b4%bb%e6%b5%81%e7%a8%8btodo" class="header-mark"></a>R2018 激活流程（TODO）</h2>]]></description></item><item><title>以我之名，去火星旅行（Send Your Name to Mars）</title><link>https://wlcheng.cc/posts/to_mars/</link><pubDate>Sun, 12 Dec 2021 13:19:28 +0800</pubDate><author><name>wlcheng</name></author><guid>https://wlcheng.cc/posts/to_mars/</guid><description><![CDATA[<p>我去不了火星，但是我的名字可以！</p>
<p>时隔两年，NASA 的第二次 <code>“Send Your Name to Mars”</code> 浪漫主义火星旅行项目又开始招募游客啦。(～￣▽￣)～</p>
<p>接下来我们就一起来看看，如何才能拿到开往火星的飞船船票（登机牌）呢？</p>
<p>首先进入我们的售票大厅：<a href="https://mars.nasa.gov/participate/send-your-name/future?utm_source=iContact&amp;utm_medium=email&amp;utm_campaign=nasas-mars-public-engagement-team&amp;utm_content=20211210-MarsNewsletter" target="_blank" rel="noopener noreferrer">免费领票处</a></p>
<div align="center" ></div>
<p>从上看起来是导引前台（导航栏）了，分了5个区，从左到右依次是：<code>名字</code>、<code>登机牌</code>、<code>地图</code>、<code>常客</code>、<code>学习</code>。根据颜色来看，当前应该是处于第一区的<code>名字</code>部分。对于功能大家在心里应该也有个猜测和期待。</p>
<p>好，我们就来看看这几个区具体都是干什么的。</p>
<h2 id="订票" class="headerLink">
    <a href="#%e8%ae%a2%e7%a5%a8" class="header-mark"></a>订票</h2><p>首先可以看见，在<code>名字</code>分区里，映入眼帘的是一个大大的个人信息登记台，看起来需要填写<code>姓名</code>、<code>国家</code>、<code>邮编</code>以及<code>邮箱</code>这几项个人信息。然后往下是针对收集个人信息的隐私保护说明和一个是否需要通过邮箱接收来自NASA的新闻动态通知。再往下，一个显眼的<code>SEND</code>（发送）可谓是再明白不过地告诉我们，点了这个按钮，我们就能开始我们的火星浪漫之旅（在2026年以我们的名字去旅行 ^o^y）。</p>
<p>既然走到这里，我们不妨就做好登记，预定上这趟旅行吧！填上我们的信息：</p>
<div align="center" ></div>
<p>做完登记，点击<code>SEND</code>提交我们的预定，只见眨眼功夫，我的登机牌就已生成（可以参考下各条信息的位置）：</p>
<div align="center" ></div>
<p>左联条码信息配着一幅“火星日出图”，水印着“<code>FUTURE MARS MISSION</code>”的计划标识，仿佛昭示着我们此行的希望和对未来的颂扬。</p>
<p>右联中间大写刻着我们所登记的名字，将承载着我们的浪漫与期盼去往这颗红色的星球。名字下方注明了我们此次旅行的出发站点（发射台）和目的地<a href="https://www.nasa.gov/image-feature/jezero-crater-mars-2020s-landing-site" target="_blank" rel="noopener noreferrer"><code>耶泽洛陨石坑</code></a>。</p>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw"></i>技巧<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">P.S. 为了接受来自世界各地的人民，NASA航空公司充分考虑到人名的多样性，对人名并未做限制，这给了一些思维清奇者自由发挥的空间😀。比如我在<code>Last Name</code>处填上姓名落款，<code>First Name</code>处填上一条寄语。妥妥的一封明信片，而且是送往火星的明信片😁。</div>
        </div>
    </div>
<h2 id="登机牌" class="headerLink">
    <a href="#%e7%99%bb%e6%9c%ba%e7%89%8c" class="header-mark"></a>登机牌</h2><p>即已经预定好登机牌，接下来我们就到<code>登机牌</code>区看看，是不是能够查到我们的登机牌了呢。</p>
<div align="center" ></div>
<p>填好预定时的信息，点击下面的<code>FIND</code>，就能查到我们的登机牌信息了，可以再次下载、打印或者嵌入网页。</p>
<h2 id="地图" class="headerLink">
    <a href="#%e5%9c%b0%e5%9b%be" class="header-mark"></a>地图</h2><p>总算来到<code>地图</code>区了，让我们来看看：</p>
<div align="center" ></div>
<p>一眼就盯到我们泱泱种花家深沉的颜色，再看右侧的排名，果然咱高居榜首，竟然已经有400多万的先行者👍。在看排行榜底部，截止我的购票日期，这购票人数已达到2000多万。但相对于全球79亿人来说还只是极少数，这么说我们也已经走在了世界前<code>3‰</code>列了呢😄。</p>
<h2 id="常客" class="headerLink">
    <a href="#%e5%b8%b8%e5%ae%a2" class="header-mark"></a>常客</h2><p>常客常客，应该是指的第一次的火星之旅吧。我来查一查是否还有曾经的我的名字：</p>
<div align="center" ></div>
<div align="center" ></div>
<p>嗯，很棒！2019年预定，2020年7月20日毅力号发射，2021年2月18日登陆耶泽洛陨石坑。</p>
<h2 id="我们的名字在哪里" class="headerLink">
    <a href="#%e6%88%91%e4%bb%ac%e7%9a%84%e5%90%8d%e5%ad%97%e5%9c%a8%e5%93%aa%e9%87%8c" class="header-mark"></a>我们的名字在哪里？</h2><p>进入<code>学习</code>区，发现我们的初心。</p>
<div align="center" ></div>
<div align="center" ></div>
<p>就在这小小的悬架上面，我们的名字静静地躺着，仰望着满天星河</p>
<p>随着毅力号的前进，我们将看尽日升日出垂落漠，宇宙山川枯银河</p>
<p>几个字节的数据，仿佛牵系着我的灵魂
当我在蓝色星球上彷徨时，会想起在孤寂的红色大地上
有你，在以坚定的意志，探索前进</p>
<p>我们的名字，承载着毅力，在前进！</p>]]></description></item><item><title>数学分析</title><link>https://wlcheng.cc/posts/mathematics_analysis/</link><pubDate>Fri, 15 Oct 2021 18:47:46 +0800</pubDate><author><name>wlcheng</name></author><guid>https://wlcheng.cc/posts/mathematics_analysis/</guid><description><![CDATA[<p>数学分析基础知识点。</p>
<h2 id="极限" class="headerLink">
    <a href="#%e6%9e%81%e9%99%90" class="header-mark"></a>极限</h2><h2 id="导数微分" class="headerLink">
    <a href="#%e5%af%bc%e6%95%b0%e5%be%ae%e5%88%86" class="header-mark"></a>导数、微分</h2><h2 id="微分学基本定理及导数应用" class="headerLink">
    <a href="#%e5%be%ae%e5%88%86%e5%ad%a6%e5%9f%ba%e6%9c%ac%e5%ae%9a%e7%90%86%e5%8f%8a%e5%af%bc%e6%95%b0%e5%ba%94%e7%94%a8" class="header-mark"></a>微分学基本定理及导数应用</h2><h3 id="中值定理" class="headerLink">
    <a href="#%e4%b8%ad%e5%80%bc%e5%ae%9a%e7%90%86" class="header-mark"></a>中值定理</h3><hr>
<p><strong>定理1（费马定理）</strong>
<em>若（i）函数$f(x)$在$x_0$点的某一邻域$O(x_0,\delta)$内有定义，并且在此邻域内恒有</em>
<em>$$f(x) \leq f(x_0)，$$</em>
<em>或者 $$f(x) \geq f(x_0)；$$</em>
<em>（ii）函数$f(x)$在$x_0$点可导，则有</em>
<em>$$f^{\prime}(x)=0$$</em></p>
<p><strong>几何意义：</strong> 如果曲线在一点处有极大（小）值，且在该点处有切线，则该切线必定是水平的。</p>
<hr>
<p><strong>定理2（拉格朗日中值定理，微分学的中值定理）</strong>
<em>若函数$f(x)$满足</em>
<em>（i）在$[a,b]$连续；</em>
<em>（ii）在$(a,b)$可导，</em>
<em>则在$(a,b)$内至少存在一点$\xi$，使</em>
<em>$$f^{\prime}(\xi) = \frac{f(b)-f(a)}{b-a}.$$</em></p>
<ul>
<li>当$f(a)=f(b)$时，定理也称为<strong>罗尔定理</strong>。</li>
<li>定理结论式可写为$f^{\prime}(a+\theta (b-a)) = \frac{f(b)-f(a)}{b-a}$ 或者$f(b)-f(a) = f^{\prime}(a+\theta (b-a)) (b-a)$，其中，$0&lt;\theta&lt;1$。</li>
<li>定理结论的式子称为<strong>中值公式</strong>或者<strong>拉格朗日公式</strong>。</li>
<li>定理的条件式<strong>充分条件</strong>。</li>
</ul>
<hr>
<p><strong>推论1</strong>
<em>若$f(x)$对$(a,b)$内每一点$x$都有$f^{\prime}(x)=0$，则在区间$a,b$内$f(x)$为一常数。</em></p>
<p><strong>推论2</strong>
<em>若两函数$f(x)$和$g(x)$在$(a,b)$内成立</em>
<em>$$f^{\prime}(x) = g^{\prime}(x)，$$</em>
<em>则在$(a,b)$内$f(x)=g(x)+c$（$c$为一常数）</em>。</p>
<p><strong>定义（利普希茨Lipschitz条件）</strong>
若$f(x)$在$[a,b]$上有定义，且存在常数$L$，使对$[a,b]$上任意两点$x^{\prime}$，$x^{\prime\prime}$，
$$|f(x^{\prime}-f(x^{\prime\prime})| \leq L|x^{\prime}-x^{\prime\prime}|$$
成立，则称$f(x)$在$[a,b]$上满足<strong>利普希茨（Lipschitz）条件</strong>。</p>
<p><strong>推论3</strong>
<em>若$f(x)$在$[a,b]$上存在有界导数，则$f(x)$在$[a,b]$上满足利普希茨条件。</em></p>
<hr>
<p><strong>定理3（柯西中值定理）</strong>
<em>若$f(x)$与$g(x)$在闭区间$[a,b]$上连续，在开区间$(a,b)$内可导，并且$g^{\prime}(x) \neq 0$，则在$(a,b)$内至少存在一点$\xi$，使</em>
<em>$$\frac{f(b)-f(a)}{g(b)-g(a)} = \frac{f^{\prime}(\xi)}{g^{\prime}(\xi)}.$$</em></p>
<hr>
<h3 id="泰勒公式" class="headerLink">
    <a href="#%e6%b3%b0%e5%8b%92%e5%85%ac%e5%bc%8f" class="header-mark"></a>泰勒公式</h3><h4 id="一阶导近似" class="headerLink">
    <a href="#%e4%b8%80%e9%98%b6%e5%af%bc%e8%bf%91%e4%bc%bc" class="header-mark"></a>一阶导近似</h4><p>当$x$与$x_0$充分接近时，$f(x)$可以通过一阶导数进行近似，即
$$f(x) \approx f(x_0) + f^{\prime}(x_0)(x-x_0).$$</p>
<p>当$|x|$很小时，常用近似式：</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>$\sin(x) \approx x$</td>
<td>$\tan(x) \approx x$</td>
<td>$\sqrt[n]{1 \pm x} \approx 1\pm \frac{x}{n}$</td>
</tr>
<tr>
<td>$\frac{1}{1+x} \approx 1-x$</td>
<td>$e^x \approx 1+x$</td>
<td>$\ln (1+x) \approx x$</td>
</tr>
</tbody>
</table>
<h4 id="泰勒公式-1" class="headerLink">
    <a href="#%e6%b3%b0%e5%8b%92%e5%85%ac%e5%bc%8f-1" class="header-mark"></a>泰勒公式</h4><p><strong>定理</strong></p>
<p>若$f(x)$在$x=0$点的某个邻域内有直到$n+1$阶连续导数，那么在此邻域内有</p>
<p>$$f(x)=f(0) + {f}^{\prime}(0)x + \frac{{f}^{\prime\prime}(0)}{2!}x^2+\dots + \frac{{f}^{(n)}(0)}{n!}x^n + R_n(x),$$
$$R_n(x) = \frac{{f}^{(n+1)}(\xi)}{(n+1)!}x^{n+1}, (0&lt;x&lt;\xi).$$</p>
<p>以上就是函数$f(x)$在$x=0$点附近关于$x$的幂函数展开式，称为<strong>泰勒展开式</strong>，其中$R_n(x)$叫做<strong>拉格朗日余项</strong>（$R_n(x)$表示为$o(x^n)$时称为<strong>佩亚诺余项</strong>）。</p>
<hr>
<h3 id="函数的单调性凸性与极值" class="headerLink">
    <a href="#%e5%87%bd%e6%95%b0%e7%9a%84%e5%8d%95%e8%b0%83%e6%80%a7%e5%87%b8%e6%80%a7%e4%b8%8e%e6%9e%81%e5%80%bc" class="header-mark"></a>函数的单调性、凸性与极值</h3><h4 id="函数的单调性" class="headerLink">
    <a href="#%e5%87%bd%e6%95%b0%e7%9a%84%e5%8d%95%e8%b0%83%e6%80%a7" class="header-mark"></a>函数的单调性</h4><p><strong>定理1（函数单调性与导数数正负的关系）</strong></p>
<p>若$f(x)$在$[a,b]$连续，在$(a,b)$可导，则$f(x)$在$[a,b]$单调增加（或单调减少）的充要条件为在$(a,b)$内$f^{\prime}(x) \geq 0$ （或 $f^{\prime}(x) \leq 0$）。用符号表示为</p>
<p>$$
\begin{aligned}
f(x)在[a,b]上 \nearrow \Longleftrightarrow f^{\prime}(x) \geq 0, \newline
f(x)在[a,b]上 \searrow \Longleftrightarrow f^{\prime}(x) \leq 0.
\end{aligned}
$$</p>
<h4 id="函数的极大值和极小值" class="headerLink">
    <a href="#%e5%87%bd%e6%95%b0%e7%9a%84%e6%9e%81%e5%a4%a7%e5%80%bc%e5%92%8c%e6%9e%81%e5%b0%8f%e5%80%bc" class="header-mark"></a>函数的极大值和极小值</h4><p><strong>定义（极值、极值点）</strong></p>
<p>若对于某一点$x_0$，存在$x_0$的一个邻域$(x_0-\delta, x_0+\delta)(\delta&gt;0)$，使对于此邻域中的任意点$x$，都有$f(x) \leq f(x_0)$（或$f(x) \geq f(x_0)$），则称$f(x)$在$x_0$有一极大（小）值$f(x_0)$，$x_0$为极大（小）值点。</p>
<ul>
<li>极值是<strong>局部的</strong>极值。</li>
</ul>
<p><strong>定理2（极值必要条件）</strong></p>
<p>若$x_0$是$f(x)$的极值点，那么$x_0$只可能是$f^{\prime}(x)$的零点或者$f(x)$的不可导点。</p>
<p><strong>定理3（极值判别法之一）</strong></p>
<p>设$f(x)$在$(x_0-\delta,x_0)$和$(x_0,x_0+\delta)$（其中$\delta&gt;0$）可导，那么</p>
<p>（i）若在$(x_0-\delta,x_0)$内$f^{\prime}(x)&lt;0$，而在$(x_0,x_0+\delta)$内$f^{\prime}(x)&gt;0$，则$x_0$为极小值点；</p>
<p>（ii）若在$(x_0-\delta,x_0)$内$f^{\prime}(x)&gt;0$，而在$(x_0,x_0+\delta)$内$f^{\prime}(x)&lt;0$，则$x_0$为极大值点；</p>
<p>（i）若在这两个区间内$f^{\prime}(x)$不变号，则$x_0$不是极值点。</p>
<p><strong>定理4（极值判别法之二）</strong></p>
<p>设$f(x)$为一阶、二阶可导，且$f^{\prime}(x_0)=0$，那么</p>
<p>（i）若$f^{\prime\prime}(x_0)&lt;0$，则$f(x_0)$是极大值；</p>
<p>（ii）若$f^{\prime\prime}(x_0)&gt;0$，则$f(x_0)$是极小值。</p>]]></description></item><item><title>Cisco Packet Tracer 学习 —— 安装</title><link>https://wlcheng.cc/posts/cisco_packet_tracer_install/</link><pubDate>Tue, 12 Oct 2021 11:00:17 +0800</pubDate><author><name>wlcheng</name></author><guid>https://wlcheng.cc/posts/cisco_packet_tracer_install/</guid><description><![CDATA[<p>思科网络仿真工具 Cisco Packet Tracer 学习系列之一：软件获取及安装。</p>
<h2 id="注册账号" class="headerLink">
    <a href="#%e6%b3%a8%e5%86%8c%e8%b4%a6%e5%8f%b7" class="header-mark"></a>注册账号</h2><p>在<a href="https://id.cisco.com/signin/register" target="_blank" rel="noopener noreferrer">Cisco Packet Tracer</a>填写信息进行注册。</p>
<div align="center" ></div>
<h2 id="安装软件" class="headerLink">
    <a href="#%e5%ae%89%e8%a3%85%e8%bd%af%e4%bb%b6" class="header-mark"></a>安装软件</h2><h3 id="下载安装" class="headerLink">
    <a href="#%e4%b8%8b%e8%bd%bd%e5%ae%89%e8%a3%85" class="header-mark"></a>下载安装</h3><p>在 Cisco Networking Academy 网页登录账号后，下载 Cisco Packet Tracer 安装包：</p>
<div align="center" ></div>
<p>打开下载的安装包，执行安装程序：</p>
<div align="center" ></div>
<h3 id="启动登录" class="headerLink">
    <a href="#%e5%90%af%e5%8a%a8%e7%99%bb%e5%bd%95" class="header-mark"></a>启动登录</h3><p>启动界面：</p>
<div align="center" ></div>
<p>首次启动需要登录我们前面注册的 Cisco Networking Academy 账号。此处勾选上<code>Keep me logged in</code>选项，能够3个月免手动登录。</p>
<div align="center" ></div>
<p>依次输入账号、密码，点击<code>Log in</code>按钮完成登录。</p>
<div align="center" ></div>
<p>登录后，会自动打开软件主界面，如下：</p>
<div align="center" ></div>
<h3 id="修改语言" class="headerLink">
    <a href="#%e4%bf%ae%e6%94%b9%e8%af%ad%e8%a8%80" class="header-mark"></a>修改语言</h3><p>下载语言包文件：在<a href="https://www.netacad.com/portal/resources/browse/341e11c1-d03f-4433-9413-29b9d207e7eb" target="_blank" rel="noopener noreferrer">列表</a>中找到<code>Simplified Chinese.ptl</code>点击下载。</p>
<div align="center" ></div>
<p>将下载的语言包文件拷贝到 Cisco Packet Tracer的安装目录（根据自己的安装目录而定）下的<code>language</code>文件夹下：</p>
<div align="center" ></div>
<p>打开 Cisco Packet Tracer</p>
<ol>
<li>从菜单上依次点击 <code>Options</code>|<code>Preferences</code>；</li>
<li>Translator 框中，选定<code>Simplified Chinese</code>；</li>
<li>点击 <code>Change Language</code>；</li>
<li>弹出框提示&quot;将在下次打开软件时生效。点<code>OK</code>。</li>
</ol>
<div align="center" ></div>
<ol start="5">
<li>关闭软件并重新打开查看是否修改成功。</li>
</ol>
<div align="center" ></div>
<p>搭好环境，下一篇正式开始学习使用。p.s. 下一篇暂无。</p>]]></description></item><item><title>Word 压缩</title><link>https://wlcheng.cc/posts/word%E5%8E%8B%E7%BC%A9/</link><pubDate>Fri, 20 Aug 2021 21:23:58 +0800</pubDate><author><name>wlcheng</name></author><guid>https://wlcheng.cc/posts/word%E5%8E%8B%E7%BC%A9/</guid><description><![CDATA[<p>应老师要求，把一个 30 多 MB 的 Word 文件压缩到 5MB 以内。一番探索，得出一套通过批量压缩 Word 中图片，以压缩 Word 的方案，记录于此。</p>
<p><strong>精简版：</strong></p>
<ol>
<li><strong>初步压缩：</strong> 打开 Word，任选一张图片-&gt;点菜单栏上<code>格式</code>-&gt;左侧<code>压缩图片</code>-&gt;去掉勾选<code>仅应用于此图片</code>，勾选 <code>96 ppi</code>，点<code>确定</code>，保存文件；</li>
<li><strong>提取图片：</strong> 把 Word 文件后缀 <code>docx</code> 改成 <code>zip</code>，然后解压，解压文件夹下路径 word/media 里就是所有的图片了；</li>
<li><strong>批量压缩：</strong> 打开<a href="https://www.iloveimg.com/zh-cn/compress-image" target="_blank" rel="noopener noreferrer">iloveimg</a> 批量压缩图片，一次最多 30 张，下载并替换本地图片；</li>
<li><strong>恢复 Word：</strong> 把 word/media 下的图片替换成压缩后的图片，然后把整个文件夹压缩成 Zip，再把后缀 Zip 改回 docx 即可。</li>
</ol>
<p><strong>啰嗦版↓</strong></p>
<h3 id="需求评估" class="headerLink">
    <a href="#%e9%9c%80%e6%b1%82%e8%af%84%e4%bc%b0" class="header-mark"></a>需求评估</h3><h4 id="需求" class="headerLink">
    <a href="#%e9%9c%80%e6%b1%82" class="header-mark"></a>需求</h4><p>现在 10 点，将这个 Word 文件压缩至 5M 以下，12 点前返回。💔</p>
<h4 id="原材料" class="headerLink">
    <a href="#%e5%8e%9f%e6%9d%90%e6%96%99" class="header-mark"></a>原材料</h4><p>所给文件是 <code>docx</code> 格式的 Word 文档，总大小 35MB；内含 73 张 <code>png</code> 格式截图，每张图占满一页；截图是期刊论文的首页截图，文字内容小且多，要尽量保证清晰。</p>
<p>上个全景图看看😲</p>
<div align="center"></div>
<h4 id="分析与准备" class="headerLink">
    <a href="#%e5%88%86%e6%9e%90%e4%b8%8e%e5%87%86%e5%a4%87" class="header-mark"></a>分析与准备</h4><p>时间紧，任务重，得高效解决。初步分析，涉及三点：</p>
<ul>
<li>
<p><strong>压缩：</strong> 由于文件内文字不多，首先忽略文字占用。那么总共 73 张图片，平均每张图片就得压缩至 68KB 以下。压缩图片来说，倒是有很多网站可以做到的，厉害点的还可以自由调整压缩比、分辨率等。</p>
</li>
<li>
<p><strong>批量：</strong> 压缩能解决了，但文件太多，不可能一张一张的去压缩再替换，既耗时又低效。这种重复工作一定要一定要批量处理。所幸 <a href="https://www.iloveimg.com/zh-cn/compress-image" target="_blank" rel="noopener noreferrer">iloveimg</a> 这个网站也是支持批量处理的，只不过一次处理最多 30 张图片，73张图片处理3次，可以接受。</p>
</li>
<li>
<p><strong>Word图片导出：</strong> 既然<strong>批量</strong>和<strong>压缩</strong>都能解决了，但图片还都在 Word 里面呢，总不能一张一张<strong>另存为</strong>吧。工具软件或者 Word 插件当然是有的，批量提取 Word 中的图片，但一个更朴素的方法当然是 <strong>解压 Word 文件</strong> 😄。因为 <code>docx</code>格式的 Word 文档基于 OpenXML 标准，而这个标准是基于 <code>Zip</code> 压缩格式的。</p>
</li>
</ul>
<h3 id="压缩方案" class="headerLink">
    <a href="#%e5%8e%8b%e7%bc%a9%e6%96%b9%e6%a1%88" class="header-mark"></a>压缩方案</h3><ol>
<li>
<p><strong>初步压缩：</strong> 先打开 Word，随便选定一张图片，点菜单栏最后的格式栏，点击左侧压缩图片，去掉勾选 仅应用于此图片，勾选 电子邮件 (96 ppi) 的分辨率，点确定，记得保存修改。</p>
</li>
<li>
<p><strong>提取图片：</strong> 把 Word 文件后缀 .docx 改成 zip，然后解压，解压后的文件夹里路径 word/media 下就是所有的图片了；</p>
</li>
<li>
<p><strong>批量压缩：</strong> 用这个网页工具 <a href="https://www.iloveimg.com/zh-cn/compress-image" target="_blank" rel="noopener noreferrer">iloveimg</a> 批量压缩图片，一次最多 30 张图片。一般直接能压缩到 100k 以下，但如果压缩后还是太大，可以再次上传压缩；</p>
</li>
<li>
<p><strong>恢复 Word：</strong> 把 word/media 下的所有图片替换成压缩后的图片，然后把整个文件夹压缩成 zip 格式，再把后缀 zip 改回 docx 即可。</p>
</li>
<li>
<p><strong>转 pdf：</strong> Word 转成 pdf，最好是用 adobe（1. Word 上右键菜单里转换为 Adobe PDF 文件，2. 或者打开 adobe 后 从文件创建 PDF 后，选 Word 文件即可）。Word 自带的导出和另存为大概率导出的 pdf 会比 Word 要大。</p>
</li>
</ol>
<h3 id="总结" class="headerLink">
    <a href="#%e6%80%bb%e7%bb%93" class="header-mark"></a>总结</h3><p>以上方案只能说是手动，更好的当然是能直接一个操作然后实现以上步骤的自动执行。不过目前能力不足，只能到此。</p>]]></description></item><item><title>PowerShell 美化</title><link>https://wlcheng.cc/posts/powershell%E7%BE%8E%E5%8C%96/</link><pubDate>Thu, 19 Aug 2021 17:40:30 +0800</pubDate><author><name>wlcheng</name></author><guid>https://wlcheng.cc/posts/powershell%E7%BE%8E%E5%8C%96/</guid><description><![CDATA[<p>记录新版 PowerShell 美化过程。</p>
<h3 id="安装-windows-terminal" class="headerLink">
    <a href="#%e5%ae%89%e8%a3%85-windows-terminal" class="header-mark"></a>安装 Windows Terminal</h3><p>可以在微软商店 (Microsoft Store) 搜索 <code>Windows Terminal</code> 安装。</p>
<p>商城搜索结果会有多种版本的Windows Terminal (以下将简称为Terminal)，不知选哪个的话，可直接点击此处链接 <a href="https://www.microsoft.com/store/productId/9N0DX20HK701" target="_blank" rel="noopener noreferrer">Windows Terminal - 微软商店</a>，然后点击<code>获取</code>，弹出框中同意<code>打开</code>电脑的微软商城，跳转到软件主页后，直接<code>安装</code>即可。安装过程无需做任何选项与设置，就像在手机上的软件商城中搜索软件进行安装一样简单。</p>
<p>当然，如果想体验最新功能，可以去官方Github发布页获取最新预览版本：<a href="https://github.com/microsoft/terminal/releases" target="_blank" rel="noopener noreferrer">Windows Terminal - Github</a></p>
<p>安装完后的 Windows Terminal，可以在系统开始菜单找到并打开。先看一下美化前的样子。</p>
<figure><a class="lightgallery" href="https://i.loli.net/2021/08/19/bTVWEIBykK74J3Y.png" title="https://i.loli.net/2021/08/19/bTVWEIBykK74J3Y.png" data-thumbnail="https://i.loli.net/2021/08/19/bTVWEIBykK74J3Y.png" data-sub-html="<h2>美化之前的PowerShell</h2>">
        
    </a><figcaption class="image-caption">美化之前的PowerShell</figcaption>
    </figure>
<p>朴实无华，看着其实也还不错。</p>
<p>可以看到Terminal的多窗口是标签化管理的，大为方便软件内的切换。而菜单栏上右侧的 <code>+</code>号可以快速开启一个默认类型的窗口。<code>﹀</code>下拉菜单可以选择各类终端窗口。</p>
<p>然后看一下终端显示的内容。因为要美化的是PowerShell，我便打开了一个Windows PowerShell窗口，键入命令 <code>$PSVersionTable</code>后回车，可以看到当前PowerShell的版本号为<code>5.1</code>，仍然是老版本。之后我们要将其换成 <strong>开源跨平台的船新版本</strong>。请看下文~</p>
<h3 id="安装-powershell" class="headerLink">
    <a href="#%e5%ae%89%e8%a3%85-powershell" class="header-mark"></a>安装 PowerShell</h3><h4 id="更新-从-microsoft-store-安装" class="headerLink">
    <a href="#%e6%9b%b4%e6%96%b0-%e4%bb%8e-microsoft-store-%e5%ae%89%e8%a3%85" class="header-mark"></a>(更新) 从 Microsoft Store 安装</h4><p>微软商城搜索 <a href="https://www.microsoft.com/store/productId/9P95ZZKTNRN4" target="_blank" rel="noopener noreferrer">PowerShell Preview</a> ，安装即可。官方渠道，可以自动更新，无需重复配置环境。</p>
<p>安装完成后，重新打开 Terminal。</p>
<h4 id="从-github-下载安装" class="headerLink">
    <a href="#%e4%bb%8e-github-%e4%b8%8b%e8%bd%bd%e5%ae%89%e8%a3%85" class="header-mark"></a>从 Github 下载安装</h4><p>采用此种方式的话，之后需要自己手动下载新版本安装包，并重新进行后续的美化配置。</p>
<p>船新版本在哪里？当然看准官方发布渠道，我选了最新预览版：<a href="https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.8" target="_blank" rel="noopener noreferrer">PowerShell</a></p>
<p>可以观察到，曾经的PowerShell 全名为 <code>Windows PowerShell</code>，但是现在去掉了前面的<code>Windows</code>，只留<code>PowerShell</code>一词；另外发布页的 <code>Assets</code>中也确实提供了各种平台的版本。这无疑是名副其实的跨平台了。</p>
<p>言归正传，从上面官方发布页中，我选择了 <code>7.2.0-preview-win-x64</code> 版本的<code>msi</code>安装包。下载下来安装包后，直接双击运行，会经历以下步骤，最后还有一个对话框点击<code>install</code>即可。</p>
<p>这个船新版本的船新 Logo 灰常 Cyber 的说。</p>
<div align="center"></div>
<h4 id="添加-powershell-到-terminal" class="headerLink">
    <a href="#%e6%b7%bb%e5%8a%a0-powershell-%e5%88%b0-terminal" class="header-mark"></a>添加 PowerShell 到 Terminal</h4><blockquote>
<p>如果前面从Microsoft Store安装的PowerShell，一般会自动添加到 Temianl 中。如果没有的话，按照下面步骤自行添加即可。</p>
</blockquote>
<p>打开 Terminal，点开菜单栏右侧下拉菜单，点击<code>设置</code>；或者直接按快捷键 <code>Ctrl + ,</code>，调出设置界面，按照下图步骤添加我们安装的 PowerShell 到Terminal中：</p>
<div align="center"></div>
<blockquote>
<p>从 Microsoft Store 安装的 PowerShell，安装目录为：<code>&quot;C:\Users\用户名\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShellPreview_8wekyb3d8bbwe\pwsh.exe&quot;</code>，将此目录添加到上图的<code>命令行</code>位置即可。</p>
</blockquote>
<p>注意添加完后，点击<code>保存</code>。</p>
<p>Terminal无需重启即可即时更新配置，从下拉菜单中看到 PowerShell 7 已经添加成功。</p>
<div align="center"></div>
<p>下面开始我们的美化之路。</p>
<h3 id="美化-powershell" class="headerLink">
    <a href="#%e7%be%8e%e5%8c%96-powershell" class="header-mark"></a>美化 PowerShell</h3><h4 id="安装-on-my-posh" class="headerLink">
    <a href="#%e5%ae%89%e8%a3%85-on-my-posh" class="header-mark"></a>安装 on-my-posh</h4><p>方法一：（更新）直接在 Microsoft Store 中搜索 <code>oh-my-posh</code> 并安装。</p>
<p>方法二：打开 Terminal，然后打开一个 PowerShell 窗口。命令行中执行以下命令安装 oh-my-posh 模块：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="nb">Install-Module</span> <span class="nb">oh-my</span><span class="n">-posh</span> <span class="n">-Scope</span> <span class="n">CurrentUser</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="设置主题" class="headerLink">
    <a href="#%e8%ae%be%e7%bd%ae%e4%b8%bb%e9%a2%98" class="header-mark"></a>设置主题</h4><p>安装完成后，执行 <code>Get-PoshThemes</code> 命令，将以各自主题的样式列出支持的主题。</p>
<div align="center"></div>
<p>其中有一些乱码，这实际是一些图标，需要安装字体包来提供图标支持，具体方法后续给出。</p>
<p>先进行主题设置。选择主题可以从以上命令的返回结果中选择自己中意的，然后执行以下命令就能进行安装：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="nb">Set-PoshPrompt</span> <span class="n">-Theme</span> <span class="err">主题名字</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>我们需要配置 PowerShell 的启动脚本，以使主题永久生效。执行以下命令打开脚本文件。若提示文件不存在，则同意创建。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">notepad</span> <span class="nv">$Profile</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后在打开的脚本文件中输入以下命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="nb">Import-Module</span> <span class="nb">oh-my</span><span class="n">-posh</span>
</span></span><span class="line"><span class="cl"><span class="nb">Set-PoshPrompt</span> <span class="n">-Theme</span> <span class="n">agnosterplus</span> <span class="c"># 此处将agnosterplus替换为自己选主题名即可</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div align="center"></div>
<p>如果从 Microsoft Store 安装的 <code>oh-my-posh</code>，则在以上脚本文件中输入以下命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="nb">oh-my</span><span class="n">-posh</span> <span class="n">init</span> <span class="n">pwsh</span> <span class="p">-</span><span class="n">-config</span> <span class="s2">&#34;</span><span class="nv">$env:POSH_THEMES_PATH</span><span class="s2">\agnosterplus.omp.json&#34;</span> <span class="p">|</span> <span class="nb">Invoke-Expression</span> 
</span></span><span class="line"><span class="cl"><span class="c"># 此处将agnosterplus替换为自己选的主题即可</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>之后重启即可看到效果。</p>
<h4 id="设置字体" class="headerLink">
    <a href="#%e8%ae%be%e7%bd%ae%e5%ad%97%e4%bd%93" class="header-mark"></a>设置字体</h4><p>为了对主题所需的图标符号提供支持，需要 Nerd Fonts 类字体，可以到字体集合主页<a href="https://www.nerdfonts.com/font-downloads" target="_blank" rel="noopener noreferrer">Nerd Fonts</a> 挑选喜欢的字体，可以预览字体效果。选好后直接下载字体文件即可。</p>
<div align="center"></div>
<p>经过一番查看，我最终凭感觉选择了<a href="https://www.programmingfonts.org/#go-mono" target="_blank" rel="noopener noreferrer">Go Mono</a>。</p>
<p>将下载的压缩包直接解压缩后，是一套字体文件，由于不需要其他用途，此处只安装正体的字体。选择不带<code>Bold</code>（加粗）不带<code>Italic</code>（斜体）的<code>Windows Compatible</code>字体文件，直接双击安装。</p>
<div align="center"></div>
<p>弹出的对话窗口，展示了字体样式，直接点击左上角<code>安装</code>即可。</p>
<div align="center"></div>
<p>字体已经安装好，接下来在 Terminal 下按<code>Ctrl + ,</code>打开设置，从左侧<code>配置文件</code>中选择到自己新建的PowerShell，我的是 PowerShell 7 ，然后右侧选择<code>外观</code>选项卡，找到<code>字体</code>下拉菜单，选择自己所选的字体名字即可，我的为 <code>GoMono NF</code>。</p>
<div align="center"></div>
<p>字体名可以从系统<code>字体设置</code>查看到，<code>开始</code>-&gt;<code>设置</code>-&gt;搜索<code>字体设置</code>-&gt;搜索字体关键字&rsquo;GoMono&rsquo;。可以看到我的字体名为<code>GoMono NF</code>。记住这个字体名，之后 VS Code 的终端 PowerShell 配置中会再次用到。</p>
<div align="center"></div>
<h4 id="设置背景图" class="headerLink">
    <a href="#%e8%ae%be%e7%bd%ae%e8%83%8c%e6%99%af%e5%9b%be" class="header-mark"></a>设置背景图</h4><p>只需打开 Terminal 的设置，从左侧<code>配置文件</code>中选择到自己新建的PowerShell，然后右侧选择<code>外观</code>选项卡，找到<code>背景图像</code>设置项，<code>浏览</code>选择图片。选好图片后，下面会多出一些针对背景图的设置，包括模糊、透明、位置等，可以自行调整。</p>
<div align="center"></div>
<h3 id="vs-code-集成-powershell" class="headerLink">
    <a href="#vs-code-%e9%9b%86%e6%88%90-powershell" class="header-mark"></a>VS Code 集成 PowerShell</h3><p>VS Code 内按快捷键 <code>Ctrl + Shift + `</code>，则在编辑窗口下面会打开一个（默认CMD）终端窗口。VS Code中已经自动集成了 CMD 和 Windows PowerShell。但我需要：1. 将新版的 PowerShell Preview 集成进来；2. 将其设置为默认打开；3. 更改终端字体，以提供主题包支持。</p>
<p>首先<code>Ctrl + ,</code>打开设置，然后搜索<code>Terminal</code>，找到<code>Terminal &gt; Integrated &gt; Profiles: Windows</code>的项，点击下面的<code>在settings.json中编辑</code>。</p>
<div align="center"></div>
<p>之后在打开的<code>settings.json</code>文件下，在<code>terminal.integrated.profiles.windows</code>项内按照以下红色框中代码的格式添加自己的 PowerShell 条目，其中的<code>PowerShell 7 pre</code>替换为自拟名字即可，<code>path</code>项内的路径替换为自己的 PowerShell 安装路径。然后<strong>保存</strong>并关闭文件。</p>
<div align="center"></div>
<blockquote>
<p>如果是从Microsoft Store安装的 PowserShell，上图中的 <code>path</code> 字段为：<code>&quot;C:\Users\用户名\AppData\Local\Microsoft\WindowsApps\Microsoft.PowerShellPreview_8wekyb3d8bbwe\pwsh.exe&quot;</code></p>
</blockquote>
<p>通过以上操作，我们已经为终端窗口添加了新的 PowerShell。接下来将其设置为默认打开。</p>
<p>仍然<code>Ctrl + ,</code>打开设置，搜索<code>Terminal</code>，找到<code>Terminal &gt; Integrated &gt; Default Profile: Windows</code>项，下拉选项中选择我们上一步添加的 PowerShell 的名字<code>PowerShell 7 pre</code>。</p>
<div align="center"></div>
<p>在设置页，搜索<code>Terminal Font</code>，找到<code>Terminal &gt; Integrated &gt; Font Family</code>项，将其值设置为我们前面安装的字体文件名 <code>GoMono NF</code>，由于我选的这款字体本身字号挺大，所以我还将字号改为了 <code>12</code>。</p>
<div align="center"></div>
<p>经过以上配置，最终的效果如下图。</p>
<div align="center"></div>
<h3 id="参考" class="headerLink">
    <a href="#%e5%8f%82%e8%80%83" class="header-mark"></a>参考</h3><ul>
<li><a href="https://www.edgeless.top/PowerShell%E7%BE%8E%E5%8C%96/" target="_blank" rel="noopener noreferrer">PowerShell 美化 - j3rry</a></li>
<li><a href="https://www.nerdfonts.com/font-downloads" target="_blank" rel="noopener noreferrer">Nerd Fonts</a></li>
<li><a href="https://ohmyposh.dev/docs/pwsh" target="_blank" rel="noopener noreferrer">oh-my-push 文档</a></li>
<li><a href="https://docs.microsoft.com/en-us/powershell/scripting/dev-cross-plat/vscode/using-vscode?view=powershell-7.2#adding-your-own-powershell-paths-to-the-session-menu" target="_blank" rel="noopener noreferrer">Using Visual Studio Code for PowerShell Development - Microsoft</a></li>
<li><a href="https://code.visualstudio.com/docs/editor/integrated-terminal#_configuring-profiles" target="_blank" rel="noopener noreferrer">VS Code Integrated Terminal</a></li>
<li><a href="https://www.cnblogs.com/taylorshi/p/16482694.html" target="_blank" rel="noopener noreferrer">再谈 Windows Terminal (终端) 主题和字体美化，Oh-My-Posh、Terminal-Icons、Posh-git</a></li>
<li><a href="https://www.cnblogs.com/xiaorang/articles/windows_terminal_oh_my_posh.html" target="_blank" rel="noopener noreferrer">Windows Terminal 美化 (oh-my-posh)</a></li>
</ul>]]></description></item><item><title>基于 Python 批量提取 PDF 首页</title><link>https://wlcheng.cc/posts/pdftoolbox/</link><pubDate>Fri, 13 Aug 2021 00:57:00 +0800</pubDate><author><name>wlcheng</name></author><guid>https://wlcheng.cc/posts/pdftoolbox/</guid><description><![CDATA[<p>最近因为汇总论文成果，需要提取论文的首页。虽然 Acrobat 提供了<code>页面组织</code>功能可以任意提取，但手动操作一次只能处理一个文件。当面对好几十篇论文时，尚未开始就已经放弃。</p>
<p>工欲善其事必先利其器，决定造个工具，一劳永逸提高效率。</p>
<p>以下代码基于 <a href="https://cloud.tencent.com/developer/article/1584421" target="_blank" rel="noopener noreferrer">小白程序猿</a> 的方案，面向我自己的需求作了一些调整适配，在此致谢🫡</p>
<div class="details admonition tip">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>插播推荐 PDF 补丁丁<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">一个满满情怀的 PDF 神器：<a href="https://www.cnblogs.com/pdfpatcher/" target="_blank" rel="noopener noreferrer">PDF 补丁丁</a>，已开源在<a href="https://github.com/wmjordan/PDFPatcher" target="_blank" rel="noopener noreferrer">PDFPatcher</a>，三方长文教程：<a href="https://post.smzdm.com/p/anx09ww3/" target="_blank" rel="noopener noreferrer">免费了 12 年的神器开源了，你可能不知道它有多强大</a></div>
        </div>
    </div>
<h2 id="环境与原料" class="headerLink">
    <a href="#%e7%8e%af%e5%a2%83%e4%b8%8e%e5%8e%9f%e6%96%99" class="header-mark"></a>环境与原料</h2><ul>
<li>
<p><strong>Python</strong></p>
</li>
<li>
<p><strong>PyMuPDF模块</strong></p>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">pip install PyMuPDF
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="工具代码" class="headerLink">
    <a href="#%e5%b7%a5%e5%85%b7%e4%bb%a3%e7%a0%81" class="header-mark"></a>工具代码</h2><p>以下为完整代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># coding:utf-8</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">fitz</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 解析</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 函数将file_path中所有文件（包括子目录中的文件），处理后，按照原目录保存到save_path下。</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 即save_path下的文件夹结构和file_path一致。</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">analysis</span><span class="p">(</span><span class="n">file_path</span><span class="p">,</span> <span class="n">save_path</span><span class="p">,</span> <span class="n">num</span><span class="p">,</span> <span class="n">toimg</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 资源列表</span>
</span></span><span class="line"><span class="cl">    <span class="n">file_array</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isdir</span><span class="p">(</span><span class="n">file_path</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 目录循环压入</span>
</span></span><span class="line"><span class="cl">        <span class="n">file_count</span> <span class="o">=</span> <span class="n">get_path_file</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">file_count</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">file_array</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 单文件，单次调用</span>
</span></span><span class="line"><span class="cl">        <span class="n">file_array</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># 判断为空情况</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="ow">not</span> <span class="n">file_array</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;此目录下无文件&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 执行解析</span>
</span></span><span class="line"><span class="cl">    <span class="n">file_count_num</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">file_array</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;程序运行中，共计</span><span class="si">%s</span><span class="s2">个文件&#34;</span> <span class="o">%</span> <span class="n">file_count_num</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">success_num</span> <span class="o">=</span> <span class="n">file_count_num</span>
</span></span><span class="line"><span class="cl">    <span class="n">failed_file_array</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">file_array</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;原文件路径：</span><span class="si">%s</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="n">v</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 获取文件名称及类型</span>
</span></span><span class="line"><span class="cl">        <span class="n">file_name</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># print(&#34;文件信息：%s&#34; % file_name)</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="s1">&#39;.pdf&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">file_name</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;此文件非PDF文件，跳过&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">failed_file_array</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s2">&#34;非 PDF文件：&#34;</span> <span class="o">+</span> <span class="n">file_name</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">success_num</span> <span class="o">=</span> <span class="n">success_num</span> <span class="o">-</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">            <span class="k">continue</span>
</span></span><span class="line"><span class="cl">        <span class="c1">#  打开PDF文件，生成一个对象</span>
</span></span><span class="line"><span class="cl">        <span class="n">doc</span> <span class="o">=</span> <span class="n">fitz</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 总页数</span>
</span></span><span class="line"><span class="cl">        <span class="n">count_page</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="n">pageCount</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># print(&#34;文件共计：%s页&#34; % count_page)</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">toimg</span> <span class="o">==</span> <span class="kc">False</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># 仅提取页面</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">count_page</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">doc2</span> <span class="o">=</span> <span class="n">fitz</span><span class="o">.</span><span class="n">open</span><span class="p">()</span>      <span class="c1"># 创建新的空PDF</span>
</span></span><span class="line"><span class="cl">                <span class="n">doc2</span><span class="o">.</span><span class="n">insert_pdf</span><span class="p">(</span><span class="n">doc</span><span class="p">,</span> <span class="n">to_page</span> <span class="o">=</span> <span class="n">num</span><span class="p">)</span>  <span class="c1"># 提取doc的第1页到doc2</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># 创建子目录</span>
</span></span><span class="line"><span class="cl">                <span class="n">p_1</span> <span class="o">=</span> <span class="n">v</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">file_path</span><span class="p">,</span> <span class="n">save_path</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">p_2</span> <span class="o">=</span> <span class="n">p_1</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">file_name</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">p_2</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">                    <span class="n">os</span><span class="o">.</span><span class="n">makedirs</span><span class="p">(</span><span class="n">p_2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;提取到路径：&#34;</span> <span class="o">+</span> <span class="n">p_2</span> <span class="o">+</span> <span class="n">file_name</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">doc2</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="n">p_2</span> <span class="o">+</span> <span class="n">file_name</span><span class="p">)</span>    <span class="c1"># 保存提取出的PDF文件</span>
</span></span><span class="line"><span class="cl">                <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;提取完成&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;此文档无内容，跳过&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">failed_file_array</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s2">&#34;文件无内容：&#34;</span> <span class="o">+</span> <span class="n">file_name</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">success_num</span> <span class="o">=</span> <span class="n">success_num</span> <span class="o">-</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">                <span class="k">continue</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># 将页面转换为图片</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">count_page</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">page</span> <span class="o">=</span> <span class="n">doc</span><span class="p">[</span><span class="n">num</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">                <span class="n">rotate</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># 每个尺寸的缩放系数为2，这将为我们生成分辨率提高四倍的图像。</span>
</span></span><span class="line"><span class="cl">                <span class="n">zoom_x</span> <span class="o">=</span> <span class="mf">2.0</span>
</span></span><span class="line"><span class="cl">                <span class="n">zoom_y</span> <span class="o">=</span> <span class="mf">2.0</span>
</span></span><span class="line"><span class="cl">                <span class="n">trans</span> <span class="o">=</span> <span class="n">fitz</span><span class="o">.</span><span class="n">Matrix</span><span class="p">(</span><span class="n">zoom_x</span><span class="p">,</span> <span class="n">zoom_y</span><span class="p">)</span><span class="o">.</span><span class="n">preRotate</span><span class="p">(</span><span class="n">rotate</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">pm</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">getPixmap</span><span class="p">(</span><span class="n">matrix</span><span class="o">=</span><span class="n">trans</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># 保存路径</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># 创建子目录</span>
</span></span><span class="line"><span class="cl">                <span class="n">p_1</span> <span class="o">=</span> <span class="n">v</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">file_path</span><span class="p">,</span> <span class="n">save_path</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">p_2</span> <span class="o">=</span> <span class="n">p_1</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">file_name</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">p_2</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">                    <span class="n">os</span><span class="o">.</span><span class="n">makedirs</span><span class="p">(</span><span class="n">p_2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                
</span></span><span class="line"><span class="cl">                <span class="n">new_file_name</span> <span class="o">=</span> <span class="n">file_name</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&#34;.pdf&#34;</span><span class="p">,</span> <span class="s2">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;提取到路径：&#34;</span> <span class="o">+</span> <span class="n">p_2</span> <span class="o">+</span> <span class="s1">&#39;</span><span class="si">%s</span><span class="s1">.png&#39;</span> <span class="o">%</span> <span class="n">new_file_name</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">pm</span><span class="o">.</span><span class="n">writePNG</span><span class="p">(</span><span class="n">p_2</span> <span class="o">+</span> <span class="s1">&#39;</span><span class="si">%s</span><span class="s1">.png&#39;</span> <span class="o">%</span> <span class="n">new_file_name</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;提取并转换为图片完成&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;此文档无内容，跳过&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">failed_file_array</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">file_name</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">success_num</span> <span class="o">=</span> <span class="n">success_num</span> <span class="o">-</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">                <span class="k">continue</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\n\n</span><span class="s2">合计 </span><span class="si">%d</span><span class="s2"> 个文件提取成功，以下文件提取失败：&#34;</span> <span class="o">%</span> <span class="n">success_num</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">failed_file_array</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 返回目录下所有文件</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">get_path_file</span><span class="p">(</span><span class="n">files_path</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">data</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">root</span><span class="p">,</span> <span class="n">dirs</span><span class="p">,</span> <span class="n">files</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">walk</span><span class="p">(</span><span class="n">files_path</span><span class="p">,</span> <span class="n">topdown</span><span class="o">=</span><span class="kc">False</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">files</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">f_p</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\\</span><span class="s2">&#34;</span><span class="p">,</span> <span class="s2">&#34;/&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">data</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">f_p</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">data</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 规范路径的斜杠格式</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">uni_path</span><span class="p">(</span><span class="n">path</span><span class="p">:</span> <span class="nb">str</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">str</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># return path.replace(r&#39;\/&#39;.replace(os.sep, &#39;&#39;), os.sep)  # 转换为当前系统的格式</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">path</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\\\\</span><span class="s2">&#34;</span><span class="p">,</span><span class="s2">&#34;/&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\\</span><span class="s2">&#34;</span><span class="p">,</span><span class="s2">&#34;/&#34;</span><span class="p">)</span> <span class="c1"># 统一转换为unix格式</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;|---------------------------------|&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;|++++++++  PDF处理工具箱  ++++++++|&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;|---------------------------------|&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;|                                 |&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;| 1. PDF 批量提取首页             |&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;| 2. PDF 批量提取首页并转换为图片 |&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;|                                 |&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;|---------------------------------|&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># 选择处理方式</span>
</span></span><span class="line"><span class="cl">    <span class="n">toimg</span> <span class="o">=</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">    <span class="n">choice</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&#34;请输入要执行操作的编号：&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">choice</span> <span class="o">==</span> <span class="s1">&#39;1&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">toimg</span> <span class="o">=</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">    <span class="k">elif</span> <span class="n">choice</span> <span class="o">==</span> <span class="s1">&#39;2&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">toimg</span> <span class="o">=</span><span class="kc">True</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 当前目录下的文件</span>
</span></span><span class="line"><span class="cl">    <span class="n">now_path</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">getcwd</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;当前位置：</span><span class="si">%s</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="n">now_path</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 保存路径</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;请输入参数，以 / 结尾&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">save_path</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&#34;提取文件保存地址:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 判断目录</span>
</span></span><span class="line"><span class="cl">    <span class="n">save_path_status</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">save_path</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="ow">not</span> <span class="n">save_path_status</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">save_path</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 截取页数</span>
</span></span><span class="line"><span class="cl">    <span class="n">num</span> <span class="o">=</span> <span class="mi">0</span> <span class="c1"># 截取第一页</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 路径或文件名</span>
</span></span><span class="line"><span class="cl">    <span class="n">file_path</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&#34;待处理PDF文件地址:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># 调用方法</span>
</span></span><span class="line"><span class="cl">    <span class="n">analysis</span><span class="p">(</span><span class="n">uni_path</span><span class="p">(</span><span class="n">file_path</span><span class="p">),</span> <span class="n">uni_path</span><span class="p">(</span><span class="n">save_path</span><span class="p">),</span> <span class="n">num</span><span class="p">,</span> <span class="n">toimg</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="参考" class="headerLink">
    <a href="#%e5%8f%82%e8%80%83" class="header-mark"></a>参考</h2><p><a href="https://cloud.tencent.com/developer/article/1584421" target="_blank" rel="noopener noreferrer">Python 提取 PDF 第一页为封面图片【批量提取】</a></p>
<p><a href="https://blog.csdn.net/lnotime/article/details/87720332" target="_blank" rel="noopener noreferrer">Python 把任意系统的路径转换成当前系统的格式（关于 / \ 分隔符的）</a></p>
<p><a href="https://www.jianshu.com/p/bbad16822eab" target="_blank" rel="noopener noreferrer">python中os.walk的用法</a></p>
<p><a href="https://pymupdf.readthedocs.io/en/latest/document.html#Document.insert_pdf" target="_blank" rel="noopener noreferrer">python PyMuPDF(fitz)包中insert_pdf的用法</a></p>]]></description></item></channel></rss>